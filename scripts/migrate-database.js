const mysql = require('mysql2/promise')

const connectionConfig = {
  host: '127.0.0.1',
  port: 3306,
  user: 'root',
  password: '',
  database: 'burza_web',
  waitForConnections: true,
  connectionLimit: 10,
  queueLimit: 0,
}

async function migrateDatabase() {
  const connection = await mysql.createConnection(connectionConfig)
  
  try {
    console.log('üîÑ Spou≈°t√≠m migraci datab√°ze...')
    
    // Kontrola existence sloupc≈Ø v users
    const [userColumns] = await connection.execute(`
      SELECT COLUMN_NAME 
      FROM INFORMATION_SCHEMA.COLUMNS 
      WHERE TABLE_SCHEMA = 'burza_web' 
      AND TABLE_NAME = 'users'
    `)
    
    const existingUserColumns = userColumns.map(col => col.COLUMN_NAME)
    console.log('üìã Existuj√≠c√≠ sloupce (users):', existingUserColumns)
    
    // P≈ôid√°n√≠ chybƒõj√≠c√≠ch sloupc≈Ø (users)
    const userColumnsToAdd = [
      {
        name: 'nickname',
        definition: 'VARCHAR(191) NULL',
        description: 'P≈ôezd√≠vka u≈æivatele'
      },
      {
        name: 'city',
        definition: 'VARCHAR(191) NULL',
        description: 'Mƒõsto u≈æivatele'
      },
      {
        name: 'bio',
        definition: 'TEXT NULL',
        description: 'Bio u≈æivatele'
      },
      {
        name: 'reputation',
        definition: "ENUM('VERY_GOOD', 'GOOD', 'NEUTRAL', 'BAD', 'VERY_BAD') NOT NULL DEFAULT 'NEUTRAL'",
        description: 'Reputace u≈æivatele'
      }
    ]
    
    for (const column of userColumnsToAdd) {
      if (!existingUserColumns.includes(column.name)) {
        console.log(`‚ûï P≈ôid√°v√°m sloupec: ${column.name}`)
        await connection.execute(`
          ALTER TABLE users 
          ADD COLUMN ${column.name} ${column.definition}
        `)
        console.log(`‚úÖ Sloupec ${column.name} byl √∫spƒõ≈°nƒõ p≈ôid√°n`)
      } else {
        console.log(`‚è≠Ô∏è  Sloupec ${column.name} ji≈æ existuje`)
      }
    }

    // Kontrola existence sloupc≈Ø v products
    const [productColumns] = await connection.execute(`
      SELECT COLUMN_NAME 
      FROM INFORMATION_SCHEMA.COLUMNS 
      WHERE TABLE_SCHEMA = 'burza_web' 
      AND TABLE_NAME = 'products'
    `)
    const existingProductColumns = productColumns.map(col => col.COLUMN_NAME)
    console.log('üì¶ Existuj√≠c√≠ sloupce (products):', existingProductColumns)

    // P≈ôid√°n√≠ listingType do products
    if (!existingProductColumns.includes('listingType')) {
      console.log('‚ûï P≈ôid√°v√°m sloupec: listingType do products')
      await connection.execute(`
        ALTER TABLE products 
        ADD COLUMN listingType ENUM('NABIZIM','SHANIM') NOT NULL DEFAULT 'NABIZIM' AFTER price
      `)
      console.log('‚úÖ Sloupec listingType byl √∫spƒõ≈°nƒõ p≈ôid√°n')
    } else {
      console.log('‚è≠Ô∏è  Sloupec listingType ji≈æ existuje')
    }
    
    // P≈ôid√°n√≠ mainImage do products (hlavn√≠ obr√°zek produktu)
    if (!existingProductColumns.includes('mainImage')) {
      console.log('‚ûï P≈ôid√°v√°m sloupec: mainImage do products')
      await connection.execute(`
        ALTER TABLE products 
        ADD COLUMN mainImage VARCHAR(512) NULL AFTER \`condition\`
      `)
      console.log('‚úÖ Sloupec mainImage byl √∫spƒõ≈°nƒõ p≈ôid√°n')
    } else {
      console.log('‚è≠Ô∏è  Sloupec mainImage ji≈æ existuje')
    }
    
    // P≈ôid√°n√≠ viewCount do products (poƒçet zobrazen√≠ produktu)
    if (!existingProductColumns.includes('viewCount')) {
      console.log('‚ûï P≈ôid√°v√°m sloupec: viewCount do products')
      await connection.execute(`
        ALTER TABLE products 
        ADD COLUMN viewCount INT NOT NULL DEFAULT 0 AFTER isSold
      `)
      console.log('‚úÖ Sloupec viewCount byl √∫spƒõ≈°nƒõ p≈ôid√°n')
    } else {
      console.log('‚è≠Ô∏è  Sloupec viewCount ji≈æ existuje')
    }
    
    console.log('üéâ Migrace datab√°ze dokonƒçena!')
    
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi migraci datab√°ze:', error)
    throw error
  } finally {
    await connection.end()
  }
}

// Spu≈°tƒõn√≠ migrace
migrateDatabase()
  .then(() => {
    console.log('‚úÖ Migrace byla √∫spƒõ≈°nƒõ dokonƒçena')
    process.exit(0)
  })
  .catch((error) => {
    console.error('‚ùå Migrace selhala:', error)
    process.exit(1)
  })
